module sign_gen(clk_dac,value,enable,reset,finished,switch);

input clk_dac;
input enable,reset;
output finished;

output reg [13:0] value;

// 4 ram block with different initial momeory.
sin_test sin_entity(
	.address(CounterX),
	.clock(clk_dac),
	.wren(1'b0), 
	.q(val1));



input [3:0] switch;
reg [3:0] re_switch;
wire [13:0] val1,val2,val3,val4;

assign value = val1 && re_switch[0] + val2 && re_switch[1] + val3 && re_switch[2] + val4 && re_switch[3];

initial
begin
	re_switch <= 'b0001;
end

always @ (posedge switch) // only accecpt pulse, stay unchanged after touch
begin
	case(switch)
		'b0001:
			re_switch <= switch;
		'b0010:
			re_switch <= switch;
		'b0100:
			re_switch <= switch;
		'b1000:
			re_switch <= switch;
		default:
			re_switch <= 'b0001;
end


reg [9:0] CounterX;
// a 1024 counter
// module vga_sin(CounterX,color,clk,enable,reset,finished,read_CounterX,time_division);
wire CounterXmaxed = (CounterX=='d1023); // samples 1024
wire finished;
assign finished = (CounterXmaxed==1);


always @(posedge clk_dac)
begin
	if(reset == 1)
		CounterX <= 0;
	else
	begin
	if(CounterXmaxed)
	  	CounterX <= 0;
	else if(enable == 1)
	  	CounterX <= CounterX + 1;
	end
end

endmodule